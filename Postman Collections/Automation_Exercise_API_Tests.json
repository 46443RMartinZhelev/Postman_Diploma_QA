{
	"info": {
		"_postman_id": "8bb75e47-893f-4f00-8f4c-37d06ab9a3e0",
		"name": "Automation Exercise API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "To implement",
			"item": [
				{
					"name": "7 POST To Verify Login with valid details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "cda2b82f-4607-4c29-9980-14759f35ea2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{SiteAPI}}/verifyLogin"
					},
					"response": []
				},
				{
					"name": "8 POST To Verify Login without email parameter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7ea159f1-5d05-4671-b036-0359036c202b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{SiteAPI}}/verifyLogin"
					},
					"response": []
				},
				{
					"name": "9 DELETE To Verify Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4320bbd1-fd10-46d8-8148-a37cc5aaafe2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{SiteAPI}}/verifyLogin"
					},
					"response": []
				},
				{
					"name": "10 POST To Verify Login with invalid details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2e5426a3-5bdd-4c87-b319-7e3288fed532",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{SiteAPI}}/verifyLogin"
					},
					"response": []
				},
				{
					"name": "11 POST To Create/Register User Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c3446009-dbf1-4962-ac26-4fbae8679913",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{SiteAPI}}/createAccount"
					},
					"response": []
				},
				{
					"name": "12 DELETE METHOD To Delete User Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8eb7b84f-df5c-4bd6-8040-a165f885bf03",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{SiteAPI}}/deleteAccount"
					},
					"response": []
				},
				{
					"name": "13 PUT METHOD To Update User Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "98e4919a-ad38-4b7b-b3ae-b148c44f28ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"url": "{{SiteAPI}}/updateAccount"
					},
					"response": []
				},
				{
					"name": "14 GET user account detail by email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Internal status OK\", function(){\r",
									"    pm.expect(jsonData.responseCode).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Products returned\", function(){\r",
									"    pm.expect(jsonData.products).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "febb9372-2721-47e4-8ea5-6011c5986d10",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{SiteAPI}}/getUserDetailByEmail"
					},
					"response": []
				}
			],
			"id": "878f5195-12be-4ae0-abfd-187cf5dac58f"
		},
		{
			"name": "1 Get All Products List",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Internal status OK\", function(){\r",
							"    pm.expect(jsonData.responseCode).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Products returned\", function(){\r",
							"    pm.expect(jsonData.products).to.not.be.empty;\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "ffa8dba5-83fb-4287-8461-37e50a2d2bb4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{SiteAPI}}/productsList"
			},
			"response": []
		},
		{
			"name": "2 POST To All Products List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ddaf196-64be-4ec6-ace2-6596b0ee302b",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Internal status Method not Supported\", function(){\r",
							"    pm.expect(jsonData.responseCode).to.eql(405);\r",
							"});\r",
							"\r",
							"pm.test(\"Status message correct\", function(){\r",
							"    pm.expect(jsonData.message).to.eql(\"This request method is not supported.\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "48f38787-4593-46e1-9cb8-c85294e0cc59",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{SiteAPI}}/productsList"
			},
			"response": []
		},
		{
			"name": "3 Get All Brands List",
			"id": "4f5926c9-dce0-4be5-8345-2b5575ab3e94",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{SiteAPI}}/brandsList"
			},
			"response": []
		},
		{
			"name": "4 PUT To All Brands List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ddaf196-64be-4ec6-ace2-6596b0ee302b",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Internal status Method not Supported\", function(){\r",
							"    pm.expect(jsonData.responseCode).to.eql(405);\r",
							"});\r",
							"\r",
							"pm.test(\"Status message correct\", function(){\r",
							"    pm.expect(jsonData.message).to.eql(\"This request method is not supported.\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "9dfb7342-3dca-4350-8ba5-755c0b86a4ff",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"url": "{{SiteAPI}}/brandsList"
			},
			"response": []
		},
		{
			"name": "5 POST To Search Product",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4eda9fd1-cacd-46af-bb5f-2585b8461533",
						"exec": [
							"let products = [\"Tops\", \"Tshirts\", \"Dress\", \"Jeans\"]\r",
							"\r",
							"pm.collectionVariables.set(\"productVariable\", products[(Math.floor(Math.random() * products.length))])"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e0eb733b-e3ad-445b-9ca5-a23d0d43e59a",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let searchParameter = pm.collectionVariables.get(\"productVariable\");\r",
							"\r",
							"pm.test(\"Internal status OK\", function(){\r",
							"    pm.expect(jsonData.responseCode).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Any products returned\", function(){\r",
							"    pm.expect(jsonData.products).to.not.be.empty;\r",
							"})\r",
							"\r",
							"pm.test(\"Correct products returned\", function(){\r",
							"    for (let i = 0; i < jsonData.products.length - 1; i++){\r",
							"        pm.expect(jsonData.products[i].category.category).to.include(searchParameter);\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "8b402cce-feca-4b05-9fd9-eaf0cd19764e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "search_product",
							"value": "{{productVariable}}",
							"type": "text"
						}
					]
				},
				"url": "{{SiteAPI}}/searchProduct"
			},
			"response": []
		},
		{
			"name": "6 POST To Search Product without search_product parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ddaf196-64be-4ec6-ace2-6596b0ee302b",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Internal status Method not Supported\", function(){\r",
							"    pm.expect(jsonData.responseCode).to.eql(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status message correct\", function(){\r",
							"    pm.expect(jsonData.message).to.eql(\"Bad request, search_product parameter is missing in POST request.\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "3057cffe-9a2f-4ec5-83da-82b331962388",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": "{{SiteAPI}}/searchProduct"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "489908b9-634a-4b62-a7b1-99b268b9768f",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fe05fc2c-b470-4414-9366-55a9eda7e389",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "SiteAPI",
			"value": ""
		},
		{
			"key": "productVariable",
			"value": "tops"
		}
	]
}